openapi: 3.0.1
info:
   title: Eclipse Hono™ Device Registry API
   description: |
      This API allows one to interact with the Eclipse Hono Device Registry
      API. It acts as a common basis which all Hono device registries should
      implement.
   contact:
      email: "hono-dev@eclipse.org"
   license:
      name: EPL-2.0
      url: https://www.eclipse.org/legal/epl-2.0/
   version: 1.0.0

externalDocs:
   description: Eclipse Hono™ homepage
   url: https://eclipse.org/hono

tags:
   - name: tenants
     description: Tenant Management
     externalDocs:
        description: Hono Multi-Tenancy
        url: https://www.eclipse.org/hono/concepts/tenancy/
   - name: devices
     description: Device registration
     externalDocs:
        description: Hono device identity
        url: https://www.eclipse.org/hono/concepts/device-identity/
   - name: credentials
     description: Device credentials
     externalDocs:
        description: Hono device identity
        url: https://www.eclipse.org/hono/concepts/device-identity/

servers:
   - url: '{corsProxy}{server}/'
     variables:
        server:
           default: http://hono.eclipse.org:28080
        corsProxy:
           default: https://cors-anywhere.herokuapp.com/

security:
   - BearerAuth: []

paths:

# Tenant API

   /tenants:

      post:
         tags:
            - tenants
         summary: Create new tenant with auto-generated ID
         operationId: createTenant
         requestBody:
            description: New tenant information
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Tenant'
            required: true
         responses:
            201:
               $ref: '#/components/responses/Created'
            400:
               $ref: '#/components/responses/MalformedRequest'
            401:
               $ref: '#/components/responses/Unauthorized'
            403:
               $ref: '#/components/responses/NotAllowed'
            409:
               $ref: '#/components/responses/AlreadyExists'

   /tenants/{tenant}:

      post:
         tags:
            - tenants
         summary: Create new tenant
         operationId: createTenantWithId
         parameters:
            - $ref: '#/components/parameters/tenant'
         requestBody:
            description: New device registration
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Tenant'
            required: true
         responses:
            201:
               $ref: '#/components/responses/Created'
            400:
               $ref: '#/components/responses/MalformedRequest'
            401:
               $ref: '#/components/responses/Unauthorized'
            403:
               $ref: '#/components/responses/NotAllowed'
            409:
               $ref: '#/components/responses/AlreadyExists'

      get:
         tags:
            - tenants
         summary: Get tenant information
         operationId: getTenant
         parameters:
            - $ref: '#/components/parameters/tenant'
         responses:
            200:
               description: operation successful
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Tenant'
               headers:
                  ETag:
                     description: Version of the resource
                     schema:
                        type: string
            400:
               $ref: '#/components/responses/MalformedRequest'
            401:
               $ref: '#/components/responses/Unauthorized'
            404:
               $ref: '#/components/responses/NotFound'

      put:
         tags:
            - tenants
         summary: Update tenant information
         operationId: updateTenant
         parameters:
            - $ref: '#/components/parameters/tenant'
            - $ref: '#/components/parameters/resourceVersion'
         requestBody:
            description: Tenant information
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Tenant'
            required: true
         responses:
            204:
               $ref: '#/components/responses/Updated'
            400:
               $ref: '#/components/responses/MalformedRequest'
            401:
               $ref: '#/components/responses/Unauthorized'
            403:
               $ref: '#/components/responses/NotAllowed'
            404:
               $ref: '#/components/responses/NotFound'
            412:
               $ref: '#/components/responses/ResourceVersionMismatch'

      delete:
         tags:
            - tenants
         summary: Delete tenant
         operationId: deleteTenant
         parameters:
            - $ref: '#/components/parameters/tenant'
            - $ref: '#/components/parameters/resourceVersion'
         responses:
            204:
               description: object deleted
            401:
               $ref: '#/components/responses/Unauthorized'
            403:
               $ref: '#/components/responses/NotAllowed'
            404:
               $ref: '#/components/responses/NotFound'
            412:
               $ref: '#/components/responses/ResourceVersionMismatch'

# Device API

   /devices/{tenant}:
      post:
         tags:
            - devices
         summary: Create new device registration with auto-generated ID
         operationId: createDeviceRegistration
         parameters:
            - $ref: '#/components/parameters/tenant'
         requestBody:
            description: New device
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Device'
            required: true
         responses:
            201:
               $ref: '#/components/responses/Created'
            400:
               $ref: '#/components/responses/MalformedRequest'
            401:
               $ref: '#/components/responses/Unauthorized'
            403:
               $ref: '#/components/responses/NotAllowed'

   /devices/{tenant}/{deviceId}:
      post:
         tags:
            - devices
         summary: Create new device registration
         operationId: createDeviceRegistrationWithId
         parameters:
            - $ref: '#/components/parameters/tenant'
            - $ref: '#/components/parameters/deviceId'
         requestBody:
            description: New device
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Device'
            required: true
         responses:
            201:
               description: device registered
               headers:
                  Location:
                     description: URL to the resource
                     schema:
                        type: string
                        format: uri
                  ETag:
                     description: Version of the resource
                     schema:
                        type: string
            400:
               $ref: '#/components/responses/MalformedRequest'
            401:
               $ref: '#/components/responses/Unauthorized'
            403:
               $ref: '#/components/responses/NotAllowed'
            409:
               $ref: '#/components/responses/AlreadyExists'

      get:
         tags:
            - devices
         summary: Get device registration information
         operationId: getRegistration
         parameters:
            - $ref: '#/components/parameters/tenant'
            - $ref: '#/components/parameters/deviceId'
         responses:
            200:
               description: operation successful
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Device'
               headers:
                  ETag:
                     description: Version of the resource
                     schema:
                        type: string
            400:
               $ref: '#/components/responses/MalformedRequest'
            401:
               $ref: '#/components/responses/Unauthorized'
            404:
               $ref: '#/components/responses/NotFound'

      put:
         tags:
            - devices
         summary: Update existing device registration
         operationId: updateRegistration
         parameters:
            - $ref: '#/components/parameters/tenant'
            - $ref: '#/components/parameters/deviceId'
            - $ref: '#/components/parameters/resourceVersion'
         requestBody:
            description: Updated device registration
            content:
               application/json:
                  schema:
                     $ref: '#/components/schemas/Device'
            required: true
         responses:
            204:
               $ref: '#/components/responses/Updated'
            400:
               $ref: '#/components/responses/MalformedRequest'
            401:
               $ref: '#/components/responses/Unauthorized'
            403:
               $ref: '#/components/responses/NotAllowed'
            404:
               $ref: '#/components/responses/NotFound'
            412:
               $ref: '#/components/responses/ResourceVersionMismatch'

      delete:
         tags:
            - devices
         summary: Delete device registration
         operationId: deleteRegistration
         parameters:
            - $ref: '#/components/parameters/tenant'
            - $ref: '#/components/parameters/deviceId'
            - $ref: '#/components/parameters/resourceVersion'
         responses:
            204:
               $ref: '#/components/responses/Delete'
            401:
               $ref: '#/components/responses/Unauthorized'
            403:
               $ref: '#/components/responses/NotAllowed'
            404:
               $ref: '#/components/responses/NotFound'
            412:
               $ref: '#/components/responses/ResourceVersionMismatch'

   /credentials/{tenant}/{deviceId}:

      get:
         tags:
            - credentials
         summary: Get credentials set of a device.
         operationId: getAllCredentials
         parameters:
            - $ref: '#/components/parameters/tenant'
            - $ref: '#/components/parameters/deviceId'
         responses:
            200:
               description: Operation successful
               content:
                  application/json:
                     schema:
                        $ref: '#/components/schemas/Credentials'
               headers:
                  ETag:
                     description: Version of the resource
                     schema:
                        type: string
            401:
               $ref: '#/components/responses/Unauthorized'
            403:
               $ref: '#/components/responses/NotAllowed'
            404:
               $ref: '#/components/responses/NotFound'
            412:
               $ref: '#/components/responses/ResourceVersionMismatch'

      put:
         tags:
            - credentials
         summary: Update credentials set for registered device
         operationId: setAllCredentials
         parameters:
            - $ref: '#/components/parameters/tenant'
            - $ref: '#/components/parameters/deviceId'
            - $ref: '#/components/parameters/resourceVersion'
         responses:
            204:
               $ref: '#/components/responses/Updated'
            400:
               $ref: '#/components/responses/MalformedRequest'
            401:
               $ref: '#/components/responses/Unauthorized'
            403:
               $ref: '#/components/responses/NotAllowed'
            404:
               $ref: '#/components/responses/NotFound'
            412:
               $ref: '#/components/responses/ResourceVersionMismatch'

      delete:
         tags:
            - credentials
         summary: Delete all credentials of a device
         operationId: deleteAllCredentials
         parameters:
            - $ref: '#/components/parameters/tenant'
            - $ref: '#/components/parameters/deviceId'
            - $ref: '#/components/parameters/resourceVersion'
         responses:
            204:
               $ref: '#/components/responses/Delete'
            401:
               $ref: '#/components/responses/Unauthorized'
            403:
               $ref: '#/components/responses/NotAllowed'
            404:
               $ref: '#/components/responses/NotFound'
            412:
               $ref: '#/components/responses/ResourceVersionMismatch'

   /credentials/{tenant}/{deviceId}/{type}/{authId}:

      get:
         tags:
            - credentials
         summary: Get credentials for an authId and type combination of a device.
         operationId: getCredentialsByTypeAndAuthId
         parameters:
            - $ref: '#/components/parameters/tenant'
            - $ref: '#/components/parameters/deviceId'
            - $ref: '#/components/parameters/type'
            - $ref: '#/components/parameters/authId'
         responses:
            200:
               description: Operation successful
               content:
                  application/json:
                     schema:
                        type: object # workaround for: https://github.com/swagger-api/swagger-ui/issues/3803
                        anyOf:
                           - $ref: '#/components/schemas/PSKSet'
                           - $ref: '#/components/schemas/PasswordSet'
                           - $ref: '#/components/schemas/X509CertificateSet'
                           - $ref: '#/components/schemas/CommonSet'
               headers:
                  ETag:
                     description: Version of the resource
                     schema:
                        type: string
            401:
               $ref: '#/components/responses/Unauthorized'
            403:
               $ref: '#/components/responses/NotAllowed'
            404:
               $ref: '#/components/responses/NotFound'
            412:
               $ref: '#/components/responses/ResourceVersionMismatch'

components:

   schemas:

# Common schema

      Error:
         type: object
         required:
            - error
         properties:
            "error":
               type: string
               description: A human readable error message of what went wrong.

      Extensions:
         type: object
         additionalProperties: true
         description: Allows arbitrary properties as extension to the ones
                      specified by the Hono API.

# Tenant schema

      Tenant:
         type: object
         additionalProperties: false
         properties:
            "enabled":
               type: boolean
               default: true
            "ext":
               $ref: '#/components/schemas/Extensions'
            "adapters":
               type: array
               description: Only a single entry per type is allowed. If multiple entries for the same type are present it is handled as an error.
               items:
                  $ref: '#/components/schemas/Adapter'
            "limits":
               $ref: '#/components/schemas/ResourceLimit'
            "trusted-ca":
               $ref: '#/components/schemas/TrustedCA'

      TrustedCA:
         type: object
         additionalProperties: false
         required:
            - "subject-dn"
         properties:
            "subject-dn":
               type: string
            "public-key":
               type: string
               format: byte
            "cert":
               type: string
               format: byte

      Adapter:
         type: object
         additionalProperties: true
         required:
            - type
         properties:
            "type":
               type: string
            "enabled":
               type: boolean
               default: false
            "device-authentication-required":
               type: boolean
               default: true
            "ext":
               $ref: '#/components/schemas/Extensions'

      ResourceLimit:
         type: object
         additionalProperties: false
         properties:
            "max-connections":
               type: integer
               default: -1

# Devices schema

      Device:
         type: object
         additionalProperties: false
         properties:
            "enabled":
               type: boolean
               default: true
            "ext":
               $ref: '#/components/schemas/Extensions'

# Credentials

      Credentials:
         type: object
         properties:
            "psk":
               $ref: '#/components/schemas/PSKCredentials'
            "hashed-password":
               $ref: '#/components/schemas/PasswordCredentials'
            "x509-cert":
               $ref: '#/components/schemas/X509CertificateSet'
         additionalProperties: true

      PSKCredentials:
         type: object
         additionalProperties:
            type: array
            items:
               $ref: '#/components/schemas/PSKSet'

      PasswordCredentials:
         type: object
         additionalProperties:
            type: array
            items:
               $ref: '#/components/schemas/PasswordSet'

      X509CertificateCredentials:
         type: object
         additionalProperties:
            type: array
            items:
               $ref: '#/components/schemas/X509CertificateSet'

      CommonSet:
         type: object
         additionalProperties: false
         properties:
            "enabled":
               type: boolean
               default: true
            "secrets":
               type: array
               items:
                  $ref: '#/components/schemas/CommonSecret'

      PSKSet:
         allOf:
            - $ref: '#/components/schemas/CommonSet'
            - type: object
              additionalProperties: false
              properties:
                 "secrets":
                    type: array
                    items:
                       $ref: '#/components/schemas/PSKSecret'

      PasswordSet:
         allOf:
            - $ref: '#/components/schemas/CommonSet'
            - type: object
              additionalProperties: false
              properties:
                 "secrets":
                    type: array
                    items:
                       $ref: '#/components/schemas/PasswordSecret'

      X509CertificateSet:
         allOf:
            - $ref: '#/components/schemas/CommonSet'
            - type: object
              additionalProperties: false
              properties:
                 "secrets":
                    type: array
                    items:
                       $ref: '#/components/schemas/CommonSecret'

      CommonSecret:
         type: object
         properties:
            "not-before":
               type: string
               format: date-time
            "not-after":
               type: string
               format: date-time
            "comment":
               type: string

      PasswordSecret:
         allOf:
            - $ref: '#/components/schemas/CommonSecret'
            - type: object
              properties:
                 "hash-function":
                    type: string
                    example: sha-512
                 "pwd-hash":
                    type: string
                    format: byte
                 "salt":
                    type: string
                    format: byte

      PSKSecret:
         allOf:
            - $ref: '#/components/schemas/CommonSecret'
            - type: object
              required:
                 - key
              properties:
                 "key":
                    type: string
                    format: byte

   parameters:

      resourceVersion:
         name: If-Match
         in: header
         description: The expected resource version
         required: false
         schema:
            type: string

      tenant:
         name: tenant
         in: path
         description: The tenant name
         required: true
         schema:
            type: string
         example: DEFAULT_TENANT

      deviceId:
         name: deviceId
         in: path
         description: The ID of the device
         required: true
         schema:
            type: string
         example: 4711

      authId:
         name: authId
         in: path
         description: The authentication ID of the device
         required: true
         schema:
            type: string
         example: sensor1

      type:
         name: type
         in: path
         description: The credentials type
         required: true
         schema:
            type: string
         example: sha-256

   responses:

      Unauthorized:
         description: Authentication credentials are required, but missing.
         headers:
            "WWW-Authenticate":
               schema:
                  type: string

      Created:
         description: Object created.
         headers:
            Location:
               description: URL to the resource
               schema:
                  type: string
                  format: uri
            ETag:
               description: The new version of the resource
               schema:
                  type: string

      Updated:
         description: Object updated.
         headers:
            ETag:
               description: The new version of the resource
               schema:
                  type: string

      Deleted:
         description: Object deleted.

      NotFound:
         description: |
            Object not found. This may also be returned for some operations
            if the user misses read access for the object.
         content:
            application/json:
               schema:
                  $ref: '#/components/schemas/Error'

      NotAllowed:
         description: |
            Operation not allowed. If the user does not have read access
            for this object, then `404` will be returned instead.
         content:
            application/json:
               schema:
                  $ref: '#/components/schemas/Error'

      MalformedRequest:
         description: Malformed request
         content:
            application/json:
               schema:
                  $ref: '#/components/schemas/Error'

      AlreadyExists:
         description: |
            Object already exists. If the user has no read access for
            the existing object, then `403` should be returned instead.
         content:
            application/json:
               schema:
                  $ref: '#/components/schemas/Error'

      ResourceVersionMismatch:
         description: |
            Expected resource version does not match current.
            This can only happen when the request header `If-Match`
            was set.
         content:
            application/json:
               schema:
                  $ref: '#/components/schemas/Error'

   securitySchemes:

      BearerAuth:
         type: http
         scheme: bearer
